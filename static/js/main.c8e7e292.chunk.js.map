{"version":3,"sources":["pages/main/reducers.js","reducers.js","store/store.js","store/index.js","routes.js","App.js","index.js","pages/main/constants.js"],"names":["initialState","starships","count","next","previous","data","people","results","loading","allPeople","moreData","nextPage","disableButtonLoadMore","planet","combineReducers","main","state","action","type","types","FETCH_PEOPLE","FETCH_PEOPLE_SUCCESS","payload","FETCH_PEOPLE_FAIL","FETCH_MORE_PEOPLE","FETCH_MORE_PEOPLE_SUCCESS","FETCH_MORE_PEOPLE_FAIL","FETCH_STARSHIPS_SUCCESS","FETCH_PLANET_SUCCESS","RESET_PLANET","persistConfig","timeout","key","storage","persistedReducer","persistReducer","rootReducer","enhancer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","x","store","createStore","persistor","persistStore","HOME","API","BASE","PEOPLE","STARSHIPS","PLANETS","MainPage","lazy","hot","module","fallback","path","component","GlobalStyle","createGlobalStyle","render","App","document","getElementById","ActionTypes"],"mappings":"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","file":"static/js/main.c8e7e292.chunk.js","sourcesContent":["import { ActionTypes as types } from './constants'\n\nexport const initialState = {\n  starships: {\n    count: 0,\n    next: '',\n    previous: null,\n    data: {}\n  },\n  people: {\n    count: 0,\n    next: '',\n    previous: null,\n    results: []\n  },\n  loading: {\n    allPeople: false,\n    moreData: false\n  },\n  nextPage: 1,\n  disableButtonLoadMore: false,\n  planet: ''\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.FETCH_PEOPLE:\n      return {\n        ...state,\n        loading: { allPeople: true, moreData: false },\n        nextPage: 1\n      }\n\n    case types.FETCH_PEOPLE_SUCCESS:\n      return {\n        ...state,\n        loading: initialState.loading,\n        people: action.payload,\n        nextPage: state.nextPage + 1\n      }\n\n    case types.FETCH_PEOPLE_FAIL:\n      return initialState\n\n    case types.FETCH_MORE_PEOPLE:\n      return {\n        ...state,\n        loading: {\n          allPeople: false,\n          moreData: true\n        }\n      }\n\n    case types.FETCH_MORE_PEOPLE_SUCCESS:\n      return {\n        ...state,\n        people: {\n          ...state.people,\n          next: action.payload.next,\n          previous: action.payload.previous,\n          results: [...state.people.results, ...action.payload.results]\n        },\n        loading: {\n          allPeople: false,\n          moreData: false\n        },\n        nextPage: state.nextPage + 1,\n        disableButtonLoadMore: !action.payload.next\n      }\n\n    case types.FETCH_MORE_PEOPLE_FAIL:\n      return {\n        ...state,\n        loading: {\n          allPeople: false,\n          moreData: false\n        }\n      }\n\n    case types.FETCH_STARSHIPS_SUCCESS:\n      return {\n        ...state,\n        starships: {\n          count: action.payload.count,\n          next: action.payload.next,\n          previous: action.payload.previous,\n          data: { ...state.starships.data, ...action.payload.data }\n        }\n      }\n\n    case types.FETCH_PLANET_SUCCESS:\n      return {\n        ...state,\n        planet: action.payload\n      }\n\n    case types.RESET_PLANET:\n      return {\n        ...state,\n        planet: ''\n      }\n\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport main from './pages/main/reducers'\n\nexport default combineReducers({\n  main\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from 'reducers'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nconst persistConfig = {\n  timeout: 10000,\n  key: 'root',\n  storage\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst logger = () =>\n  window.__REDUX_DEVTOOLS_EXTENSION__\n    ? window.__REDUX_DEVTOOLS_EXTENSION__()\n    : x => x\n\nconst enhancer = compose(\n  applyMiddleware(thunk),\n  logger()\n)\n\nexport const store = createStore(persistedReducer, {}, enhancer)\nexport const persistor = persistStore(store)\n","export { store, persistor } from './store'\n","export const HOME = '/'\n\nexport const API = {\n  BASE: 'https://swapi.co/api/',\n  PEOPLE: 'people/',\n  STARSHIPS: 'starships/',\n  PLANETS: 'planets/'\n}\n","import React, { lazy, Suspense } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { LinearProgress } from '@material-ui/core'\n\nimport { hot } from 'react-hot-loader'\n\nimport { HOME } from './routes'\n\nconst MainPage = lazy(() => import('pages/main'))\n\nconst App = () => {\n  return (\n    <Suspense fallback={<LinearProgress />}>\n      <Switch>\n        <Route path={HOME} component={MainPage} />\n      </Switch>\n    </Suspense>\n  )\n}\n\nexport default hot(module)(App)\n","import 'react-toastify/dist/ReactToastify.css'\nimport React from 'react'\nimport { createGlobalStyle } from 'styled-components'\nimport { render } from 'react-dom'\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport { store, persistor } from 'store'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { ToastContainer } from 'react-toastify'\n\nconst GlobalStyle = createGlobalStyle`\n  #root {\n    display:flex;\n    flex-direction: column;\n    min-height: 100vh;\n    background-color: #f0f0f0;\n  }\n  body {\n    margin: 0\n  }\n`\n\nrender(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <GlobalStyle />\n\n      <BrowserRouter>\n        <Route component={App} />\n        <ToastContainer />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n)\n","export const ActionTypes = {\n  FETCH_PEOPLE: 'FETCH_PEOPLE',\n  FETCH_PEOPLE_SUCCESS: 'FETCH_PEOPLE_SUCCESS',\n  FETCH_PEOPLE_FAIL: 'FETCH_PEOPLE_FAIL',\n\n  FETCH_MORE_PEOPLE: 'FETCH_MORE_PEOPLE',\n  FETCH_MORE_PEOPLE_SUCCESS: 'FETCH_MORE_PEOPLE_SUCCESS',\n  FETCH_MORE_PEOPLE_FAIL: 'FETCH_MORE_PEOPLE_FAIL',\n\n  FETCH_STARSHIPS_SUCCESS: 'FETCH_STARSHIPS_SUCCESS',\n\n  FETCH_PLANET_SUCCESS: 'FETCH_PLANET_SUCCESS',\n  RESET_PLANET: 'RESET_PLANET'\n}\n"],"sourceRoot":""}